name: Create Pre-release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write # Required to delete releases and tags

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache dotnet tools
      uses: actions/cache@v4
      with:
        path: ~/.dotnet/tools
        key: ${{ runner.os }}-dotnet-tools-ilspycmd-9.1.0.7988

    - name: Install ilspycmd
      run: dotnet tool install --global ilspycmd --version 9.1.0.7988

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/DllTranslation.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Cache Pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Game Data Zip
      uses: actions/cache@v4
      id: cache-gamedata-zip
      with:
        path: PortalsOfPhereon_Data.zip
        key: gamedata-zip-P2aSNnft-v1

    - name: Download Game Data
      if: steps.cache-gamedata-zip.outputs.cache-hit != 'true'
      run: curl -L -o PortalsOfPhereon_Data.zip 'https://pixeldrain.com/api/file/P2aSNnft?download'

    - name: Extract Game Data
      run: |
        mkdir -p Managed
        unzip -j -o PortalsOfPhereon_Data.zip "PortalsOfPhereon_Data/data.unity3d" -d .
        unzip -j -o PortalsOfPhereon_Data.zip "PortalsOfPhereon_Data/Managed/*" -d Managed/
        rm PortalsOfPhereon_Data.zip

    - name: Cache Decompiled Code
      uses: actions/cache@v4
      id: cache-decompiled
      with:
        path: ./decompiled
        key: ${{ runner.os }}-decompiled-${{ hashFiles('./Managed/Assembly-CSharp.dll') }}

    - name: Decompile and Fix
      if: steps.cache-decompiled.outputs.cache-hit != 'true'
      run: |
        mkdir -p decompiled
        cd decompiled
        ilspycmd -p -o . -r ../Managed/ -lv CSharp12_0 ../Managed/Assembly-CSharp.dll

        cd ..

        python decompile_fix.py

    - name: Install Python dependencies
      run: pip install -r requirements.txt

    - name: Run pipeline script
      run: |
        ls 
        ls decompiled
        cat decompiled/Assembly-CSharp.csproj
        ls Managed

        bash ./pipeline.sh
      env:
          PARATRANZ_TOKEN: ${{ secrets.PARATRANZ_TOKEN }}
          PYTHONUTF8: 1

    - name: Delete older releases
      uses: dev-drprasad/delete-older-releases@v0.3.4
      with:
        keep_latest: 5
        delete_tags: true
        delete_prerelease_only: true
        delete_tag_pattern: 'build-.*'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Package Release Artifacts
      run: |
        mkdir -p PortalsOfPhereon_Data/Managed
        cp output_assets/data.unity3d PortalsOfPhereon_Data/data.unity3d
        cp replaced/bin/Release/net40/Assembly-CSharp.dll PortalsOfPhereon_Data/Managed/Assembly-CSharp.dll
        zip -r PortalsOfPhereon_Data.zip PortalsOfPhereon_Data

    - name: Create Release and Upload Artifacts
      uses: softprops/action-gh-release@v2
      with:
        files: PortalsOfPhereon_Data.zip
        tag_name: build-${{ github.run_number }}
        name: "Build ${{ github.run_number }}"
        body: "Automated pre-release build."
        prerelease: true